TimeComplexity =O(n)
Space Complexity=O(1)

Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints 
of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.


class Solution 
{
    public int maxArea(int[] height) 
    {
        int n=height.length;
    int left=0;
        int right=n-1;
        int maxwater=0;
        int water=0;
        while(left<right)
        {
            water=(Math.min(height[left],height[right]))*(right-left);
            maxwater=Math.max(maxwater,water);
            
            //right--;
             if(height[left] < height[right]) left++;
             else right--;
        }
        return maxwater;
    }
}
